name: Python package

on: [pull_request]
jobs:
  lint:
    strategy:
        matrix:
          python-version: [3.7, 3.8]
          include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - uses: actions/cache@v2
      id: myCache
      if: startsWith(runner.os, 'macOS')
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirement.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Installing pip packages
      run: |
        pip install --upgrade pip
        pip install -r requirement.txt

    - name: Lint code with pylint
      run: |
        cd src
        pylint *.py

  test:
    needs: lint
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - uses: actions/cache@v2
      id: myCache
      if: startsWith(runner.os, 'macOS')
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # - name: Installing pip packages
    #   run: |
    #     pip install --upgrade pip

    - name: Run tests with pytest
      run: |
        cd src
        pytest 

    - name: Run code
      run: |
        cd src
        python wallet.py 

  # build:
  #   needs: test
  #   strategy:
  #     matrix:
  #       python-version: [3.8]
  #       os: [macos-latest, windows-latest]

  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: build with pyinstaller
  #       run: |
  #         pip install --upgrade pip
  #         pip install -r requirement.txt
  #         cd src/
  #         pyinstaller -w --onefile wallet.py --name wallet-app

  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: artifacts-${{ matrix.os }}
  #         path: src/dist/

  # test-artifact:
  #   strategy:
  #     matrix:
  #       python-version: [3.7, 3.8]
  #       os: [macos-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   needs: build
  #   name: test artifact

  #   steps:
  #   - name: Download built artifact
  #     uses: actions/download-artifact@main
  #     with:
  #       name: artifacts-${{ matrix.os }}
  #       path: artifact-download

  #   - name: test artifact
  #     run: |
  #       cd artifact-download
  #       chmod 777 wallet-app
  #       ./wallet-app
